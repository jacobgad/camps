// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum CampRole {
  Organiser
  Attendee
}

model Camp {
  id         String       @id @default(cuid())
  name       String
  organiser  String
  CampToUser CampToUser[]
}

model CampToUser {
  id     Int      @id @default(autoincrement())
  role   CampRole
  camp   Camp     @relation(fields: [campId], references: [id])
  campId String
  user   User     @relation(fields: [userId], references: [id])
  userId String

  @@unique([campId, userId])
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  phone         String?      @unique
  gender        Gender?
  accounts      Account[]
  sessions      Session[]
  CampToUser    CampToUser[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Gender {
  male
  female
}
